如果在一个内部函数里，对在外部作用域(但不是全局作用域)的变量进行引用，那么内部函数就被认为是闭包(closure)
作用：
   1. 可以在函数的外部访问到函数内部的局部变量。 
   2. 让这些变量始终保存在内存中，不会随着函数的结束而自动销毁。 
闭包的特点：
   1.可以读取自身函数外部的变量(沿着作用域链寻找)先从自身开始查找，如果自身没有才会继续往上级查找，自身如果拥有将直接调用。(哪个离的最近就用哪一个)
   2.延长内部变量的生命周期
   3.函数b嵌套在函数a内部
   4.函数a返回函数b
应用场景：
    1.保护函数内的变量安全。函数a中只有函数b才能访问，而无法通过其他途径访问到，因此保护了i的安全性。
    2.在内存中维持一个变量
      了解JAVA的同学肯定知道JAVA是有私有方法的。私有方法只能被一个类中的其他方法所调用，但是JavaScript并没有，所以就需要用闭包来模拟。
    私有方法有利于限制对代码的访问，可以避免非核心的方法干扰代码的公共接口，减少全局污染。
 
   
demo
var num = 6;
function outer() {
	var num = 1;
	function inner() {
		var n = 2;
		alert(n + num);
	}
	return inner
}
outer()()
